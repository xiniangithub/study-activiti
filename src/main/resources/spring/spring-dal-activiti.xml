<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:apollo="http://www.ctrip.com/schema/apollo"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd 
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.ctrip.com/schema/apollo
        http://www.ctrip.com/schema/apollo.xsd">
    
    <jpa:repositories base-package="com.wez.study.activiti.dal"
        entity-manager-factory-ref="entityManagerFactory" 
        transaction-manager-ref="transactionManager" />
    
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
    
    <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
        <property name="dataSource" ref="dataSource" />
        <property name="transactionManager" ref="transactionManager" />
        <!-- <property name="databaseSchema" value="${hibernate.default_schema}"></property> -->
        <!-- <property name="jdbcMaxActiveConnections" value="100" /> 默认10 -->
        <property name="idGenerator">
            <bean class="org.activiti.engine.impl.persistence.StrongUuidGenerator"></bean>
        </property>
        <!-- 建表策略，可选值：true、false、create_drop -->
        <property name="databaseSchemaUpdate" value="none" />
        <!-- 自动加载bpmn（改变时会重新加载） -->
        <property name="deploymentResources">
            <list>
                <value>classpath:workflow/*</value>
            </list>
        </property>
        
        <!--全局监听器 -->
        <!-- <property name="eventListeners">
            <list>
                <bean class="com.dscomm.task.engineer.AutoCompleteFirstTaskEventListener" />
            </list>
        </property> -->

        <!-- 流程部署更新策略 1.default：只要有一个资源改变就全部重新部署。 2：single-resource：只部署改变的资源。3：resource-parent-folder：更新同一目录下的资源。 -->
        <property name="deploymentMode" value="single-resource"></property>
        <!-- 使用Activiti身份管理：true:使用，false不使用 -->
        <property name="dbIdentityUsed" value="false"></property>
        <!-- 配置自定义User和Group的SessionFactory -->
        <!-- <property name="customSessionFactories">
            <list>
                <bean class="com.dscomm.task.executor.TaskGroupEntitySessionFactory"></bean>
            </list>
        </property> -->
        
        <property name="activityFontName" value="宋体" />
        <property name="labelFontName" value="宋体" />
        <property name="annotationFontName" value="宋体" />
        <property name="xmlEncoding" value="utf8"/>

        <property name="jpaEntityManagerFactory" ref="entityManagerFactory" /><!-- 一个实现了javax.persistence.EntityManagerFactory的bean的引用。它将被用来加载实体并且刷新更新。要么使用jpaEntityManagerFactory 或者jpaPersistenceUnitName。 -->
        <property name="jpaHandleTransaction" value="false" /><!-- 在被使用的EntityManager 实例上，该标记表示流程引擎是否需要开始和提交/回滚事物。当使用Java事物API（JTA）时，设置为false。 -->
        <property name="jpaCloseEntityManager" value="false" /><!-- 该标记表示流程引擎是否应该关闭从 EntityManagerFactory获取的 EntityManager的实例。当EntityManager 是由容器管理的时候需要设置为false（例如 当使用并不是单一事物作用域的扩展持久化上下文的时候）。 -->
        
        <!-- <property name="redisTemplate" ref="redisTemplateJSON"></property> -->
    </bean>

    <bean id="processEngineFactory" class="org.activiti.spring.ProcessEngineFactoryBean">
        <property name="processEngineConfiguration" ref="processEngineConfiguration" />
    </bean>
    
    <!-- 7大接口 -->
    <bean id="repositoryService" factory-bean="processEngineFactory" factory-method="getRepositoryService" />
    <bean id="runtimeService" factory-bean="processEngineFactory" factory-method="getRuntimeService" />
    <bean id="formService" factory-bean="processEngineFactory" factory-method="getFormService" />
    <bean id="identityService" factory-bean="processEngineFactory" factory-method="getIdentityService" />
    <bean id="taskService" factory-bean="processEngineFactory" factory-method="getTaskService" />
    <bean id="historyService" factory-bean="processEngineFactory" factory-method="getHistoryService" />
    <bean id="managementService" factory-bean="processEngineFactory" factory-method="getManagementService" />
    
</beans>